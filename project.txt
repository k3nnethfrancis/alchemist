# Project Overview

This repository contains two distinct but complementary AI agent frameworks:

## 1. Terminal Agent Framework

A tool-execution based framework that uses a terminal-like interface for agents to interact with various tools and services.

### Key Components

- **Terminal Agent (`terminal_agent_framework/terminal_agent.py`)**: Core interface for tool execution and command processing.
- **Persona Agent (`terminal_agent_framework/persona_agent.py`)**: Personality and decision-making layer.
- **Reflection Agent (`terminal_agent_framework/reflection_agent.py`)**: Step-by-step reasoning system.
- **Tools**:
  - `read_discord_messages.py`: Reads recent messages from a Discord channel.
  - `write_discord_message.py`: Writes messages to a Discord channel with cooldown management.

### Features

- Agents can interact with Discord through tools.
- Supports complex tool integration and multi-tool orchestration.
- Agents maintain consistent personalities and can perform reflection.

## 2. Eliza Framework

A direct-interaction framework focused on platform-specific implementations.

### Key Components

- **Agent Runtime (`eliza_agent/agent_runtime.py`)**: Manages the agent's state, memory, and message processing capabilities.
- **Discord Client (`eliza_agent/discord_client.py`)**: Handles Discord interactions.
- **Memory Manager**: Manages conversation history and context.
- **Message Manager**: Manages message processing and response timing.

### Features

- Direct platform integration with Discord.
- Simple response patterns.
- Quick deployment and platform-specific features.

## Shared Components (`core/`)

- **BaseAgent (`core/base_agent.py`)**: Common base class for agents.
- **Logging Configuration (`core/logging_config.py`)**: Consistent logging across frameworks.
- **Model Types (`core/models/types.py`)**: Shared data models and configurations.

## Project Structure

- **Modularity**: Both frameworks share common code while remaining independent.
- **Ease of Maintenance**: Modular structure allows for easy updates and additions.
- **Documentation**: Comprehensive documentation in `project.txt` and `agent.txt`.

# Getting Started

Refer to the respective framework directories for setup and usage instructions.

## Project Reorganization

- **Separated Frameworks**: The project now clearly separates the Terminal Agent and Eliza frameworks.
- **Shared Code**: Common functionality is placed in the `core/` directory.
- **Independent Execution**: Each framework can be run independently, preserving the distinct methodologies.